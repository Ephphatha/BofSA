/**
 *   The MIT License
 *
 *  Copyright 2011 Andrew James <ephphatha@thelettereph.com>.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
package au.edu.csu.bofsa;

import java.util.Queue;

import org.newdawn.slick.geom.Vector2f;

/**
 * @author ephphatha
 *
 */
public class SpawnPoint {
  public final Vector2f position;
  protected Queue<CheckPoint> checkpoints;
  protected Vector2f goal;

  public SpawnPoint(Vector2f position) {
    this.position = position;
    this.checkpoints = null;
    this.goal = null;
  }

  public boolean setCheckPoints(Queue<CheckPoint> checkpoints) {
    if (this.checkpoints == null) {
      this.checkpoints = checkpoints;
      return true;
    } else {
      return false;
    }
  }
  
  public boolean setGoal(Vector2f goal) {
    if (this.goal == null) {
      this.goal = goal;
      return true;
    } else {
      return false;
    }
  }
}
